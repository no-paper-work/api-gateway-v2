# Server and Application Info
server.port=8080
spring.application.name=gateway

gateway.msg=API Gateway - MicroService for ShareHelpers
gateway.build-version=v1

# Spring Cloud Gateway
spring.cloud.gateway.server.webflux.discovery.locator.enabled=false
spring.cloud.gateway.server.webflux.discovery.locator.lower-case-service-id=true

# R2DBC Database Configuration
spring.r2dbc.url=r2dbc:postgresql://ep-bold-bar-a1l33ibu-pooler.ap-southeast-1.aws.neon.tech/metis?sslmode=require
spring.r2dbc.properties.schema=gateway
spring.r2dbc.username=metis_owner
spring.r2dbc.password=npg_Jb1MVzHtu8Oj
spring.r2dbc.pool.enabled=true	

# Redis Configuration

## TOGGLE FOR ENABLING REDIS - (When set to false, Spring Boot will not automatically scan for and create 
## implementations for interfaces extending RedisRepository or other Spring Data Redis repository marker interfaces.)
spring.data.redis.repositories.enabled=true

# Redis Configuration for Rate Limiter and Cache)
spring.data.redis.host=redis-13492.c264.ap-south-1-1.ec2.redns.redis-cloud.com
spring.data.redis.port=13492

## --- Caching Configuration ---
## Set the cache type to redis to enable distributed caching.
spring.cache.type=redis

# Optional: Set a password if your Redis server requires authentication
spring.data.redis.username=default
spring.data.redis.password=9QGCGzgytadc5cGC1pzNhZVyT0af29ec

# Optional: Configure Redis database index (default is 0)
spring.data.redis.database=0

# Optional: Configure cache-specific properties for Redis
spring.cache.redis.time-to-live=60000
# CUSTOM TTL
gateway.routes.cache-ttl=60000
# Cache entries expire after 60 seconds (in milliseconds)

# spring.cache.redis.cache-null-values=true # Allow caching of null values
spring.cache.redis.key-prefix=gateway: 
# Prefix for cache keys

# Eureka Client Configuration
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/service-registry/eureka/

# Expose the Prometheus endpoint for scraping
management.endpoints.web.exposure.include=prometheus,health,info
management.endpoint.health.show-details=always
